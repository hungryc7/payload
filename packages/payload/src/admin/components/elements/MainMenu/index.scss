@import '../../../scss/styles.scss';

$transTime: 200ms;

.main-menu {
  display: flex;
  overflow: hidden;
  position: fixed;
  height: 100vh;

  &__blur-bg {
    @include blur-bg();
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 0;
    transition: all $transTime linear;
  }

  &__content {
    opacity: 0;
    transform: translateX(calc(var(--base) * -2));
    position: relative;
    z-index: 2;
    width: 50%;

    &::before {
      position: absolute;
      top: 0;
      left: 100%;
      height: 100%;
      width: calc(var(--base) * 4);
      content: ' ';
      background: linear-gradient(to right, rgba(0, 0, 0, 0.25) 0%, rgba(0, 0, 0, 0) 100%);
      pointer-events: none;
    }
  }

  &__content-children {
    position: relative;
    z-index: 1;
    overflow: auto;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: var(--base);
    padding: var(--base) 0 calc(var(--base) * 3) calc(var(--base) * 3);
  }

  &--is-open {
    .main-menu {
      &__content,
      &__blur-bg,
      &__close {
        opacity: 1;
      }

      &__close {
        transition: opacity $transTime linear;
        transition-delay: $transTime;
      }

      &__content {
        transform: translateX(0);
        transition: all $transTime linear;
      }
    }
  }

  &__close {
    @extend %btn-reset;
    position: relative;
    z-index: 2;
    flex-shrink: 0;
    text-indent: -9999px;
    cursor: pointer;
    opacity: 0;
    will-change: opacity;
    transition: none;
    transition-delay: 0ms;
    flex-grow: 1;
    flex-shrink: 1;
    background: rgba(0, 0, 0, 0.2);

    &:active,
    &:focus {
      outline: 0;
    }
  }

  &__link {
    margin: 0;

    a {
      text-decoration: none;
    }

    &:hover {
      text-decoration: underline;
    }
  }

  &__controls {
    display: flex;
    flex-direction: column;
    gap: calc(var(--base) / 2);
  }

  @include large-break {
    &__content-children {
      padding-left: var(--gutter-h);
    }
  }

  @include mid-break {
    &__close {
      display: none;
    }

    &__content {
      width: 100%;

      &::after {
        display: none;
      }
    }

    &__content-children {
      padding-top: calc(var(--base) * 0.5);
    }
  }

  @include small-break {
    &__content-children {
      padding-top: calc(var(--base) * 2);
      padding-bottom: calc(var(--base) * 2);
    }
  }
}
