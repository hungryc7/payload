{
  "compilerOptions": {
    "allowJs": true /* Allow javascript files to be compiled. */,
    "checkJs": false /* Report errors in .js files. */,
    "composite": true,
    "declaration": true /* Generates corresponding '.d.ts' file. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "jsx": "react" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
    "lib": ["dom", "dom.iterable", "esnext"],
    "module": "Node16",
    "moduleResolution": "Node16" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    /* Do not emit comments to output. */
    "noEmit": true /* Do not emit outputs. */,
    /* Concatenate and emit output to single file. */
    "outDir": "./dist" /* Redirect output structure to the directory. */,
    "paths": {
      "payload/auth": ["./src/auth/types.ts"],
      "payload/config": ["./src/config/types.ts"],
      "payload/generated-types": ["./src/generated-types.ts"],
      "payload/types": ["./src/types/index.ts"]
    },
    "resolveJsonModule": true,
    "rootDir": "." /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "skipLibCheck": true /* Skip type checking of declaration files. */,
    "sourceMap": true,
    "strict": false /* Enable all strict type-checking options. */,
    "target": "ESNext",
    "types": ["jest", "node", "@types/jest"]
  },
  "exclude": ["dist", "build", "temp", "node_modules"],
  /* Like tsconfig.build.json, but includes test directory and doesnt emit anything */
  "include": [
    "packages/**/*.ts",
    "packages/**/*.tsx",
    "packages/**/*.d.ts",
    "packages/**/*.json",
    "test/**/*.ts",
    "test/**/*.tsx",
    "test/**/*.d.ts"
  ],
  "ts-node": {
    "swc": true
  }
}
