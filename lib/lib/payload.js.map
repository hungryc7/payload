{"version":3,"sources":["../../src/lib/payload.js"],"names":["api","require","Payload","options","express","mongoose","baseURL","models","get","req","res","status","send","modelName","console","log","model","push"],"mappings":";;;;;;;;;;;;;;;AAAA;;;AAIA,IAAMA,MAAMC,QAAQ,OAAR,CAAZ;;IAEMC,O;;;AACJ,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,SAAKC,OAAL,GAAeD,QAAQC,OAAvB;AACA,SAAKC,QAAL,GAAgBF,QAAQE,QAAxB;AACA,SAAKC,OAAL,GAAeH,QAAQG,OAAvB;AACA,SAAKC,MAAL,GAAc,EAAd,CAJmB,CAMnB;;AACA,SAAKH,OAAL,CAAaI,GAAb,CAAiB,MAAjB,EAAyB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACrC;AACAA,UAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,gBAAQ,MAAKA;AAAf,OAArB;AACD,KAHD;AAID;;;;8BAESM,S,EAAW;AACnBC,cAAQC,GAAR,mBAAuBF,SAAvB,gBADmB,CAGnB;;AACA,UAAIG,4BAAWH,SAAX,EAAuB,EAAvB,CAAJ;;AACA,UAAI,CAAC,KAAKN,MAAL,CAAYM,SAAZ,CAAL,EAA6B;AAC3B,aAAKN,MAAL,CAAYU,IAAZ,CAAiBD,KAAjB;AACAF,gBAAQC,GAAR,WAAeF,SAAf;AACD;AACF","sourcesContent":["/**\n * Module dependencies.\n */\n\nconst api = require('./api');\n\nclass Payload {\n  constructor(options) {\n    this.express = options.express;\n    this.mongoose = options.mongoose;\n    this.baseURL = options.baseURL;\n    this.models = [];\n\n    // TODO: Investigate creating an API controller to encapsulate\n    this.express.get('/api', (req, res) => {\n      // TODO: Possible return basic API info and/or HATEOAS info to other routes\n      res.status(200).send({ models: this.models });\n    });\n  }\n\n  loadModel(modelName) {\n    console.log(`Loading ${modelName} model...`);\n\n    // TODO: Require file, validate schema, mount routes instead of just adding to array\n    let model = { [modelName]: {} };\n    if (!this.models[modelName]) {\n      this.models.push(model);\n      console.log(`${modelName} Loaded.`);\n    }\n  }\n}\n\nexport { Payload };\n"],"file":"payload.js"}