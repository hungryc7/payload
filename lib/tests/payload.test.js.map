{"version":3,"sources":["../../src/tests/payload.test.js"],"names":["app","initBasicPayload","Payload","express","mongoose","baseURL","describe","test","payload","expect","toBeDefined","done","expressApp","utils","getConfiguredExpress","server","listen","get","then","response","statusCode","toEqual","close","require","post"],"mappings":";;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;AANA;AAQA,IAAMA,MAAM,uBAAZ;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,SAAO,IAAIC,SAAJ,CAAY;AACjBC,aAASH,GADQ;AAEjBI,cAAUA,iBAFO;AAGjBC,aAAS;AAHQ,GAAZ,CAAP;AAKD;;AAEDC,SAAS,qBAAT,EAAgC,YAAM;AACpCC,OAAK,qBAAL,EAA4B,YAAM;AAChC,QAAMC,UAAUP,kBAAhB;AACAQ,WAAOD,OAAP,EAAgBE,WAAhB;AACD,GAHD;AAID,CALD;AAOAJ,SAAS,iBAAT,EAA4B,YAAM;AAChCC,OAAK,kBAAL,EAAyB,UAACI,IAAD,EAAU;AACjC,QAAMC,aAAaC,MAAMC,oBAAN,EAAnB;AACA,QAAMN,UAAU,IAAIN,SAAJ,CAAY;AAC1BC,eAASS,UADiB;AAE1BR,gBAAUA,iBAFgB;AAG1BC,eAAS;AAHiB,KAAZ,CAAhB;AAMA,QAAIU,SAASH,WAAWI,MAAX,CAAkB,IAAlB,CAAb;AACA,4BAAQJ,UAAR,EAAoBK,GAApB,CAAwB,MAAxB,EAAgCC,IAAhC,CAAqC,UAACC,QAAD,EAAc;AACjDV,aAAOU,SAASC,UAAhB,EAA4BC,OAA5B,CAAoC,GAApC;AACAN,aAAOO,KAAP;AACAX;AACD,KAJD;AAKD,GAdD;AAgBAJ,OAAK,gCAAL,EAAuC,UAACI,IAAD,EAAU;AAC/C,QAAMC,aAAaC,MAAMC,oBAAN,EAAnB;AACA,QAAMN,UAAU,IAAIN,SAAJ,CAAY;AAC1BC,eAASS,UADiB;AAE1BR,gBAAUA,iBAFgB;AAG1BC,eAAS;AAHiB,KAAZ,CAAhB,CAF+C,CAQ/C;;AACAkB,YAAQ,oBAAR,EAA8Bf,OAA9B;;AAEA,QAAIO,SAASH,WAAWI,MAAX,CAAkB,IAAlB,CAAb;AACA,4BAAQJ,UAAR,EAAoBK,GAApB,CAAwB,gBAAxB,EAA0CC,IAA1C,CAA+C,UAACC,QAAD,EAAc;AAC3DV,aAAOU,SAASC,UAAhB,EAA4BC,OAA5B,CAAoC,GAApC;AACAN,aAAOO,KAAP;AACAX;AACD,KAJD;AAKD,GAjBD;AAmBAJ,OAAK,iCAAL,EAAwC,UAACI,IAAD,EAAU;AAChD,QAAMC,aAAaC,MAAMC,oBAAN,EAAnB;AACA,QAAMN,UAAU,IAAIN,SAAJ,CAAY;AAC1BC,eAASS,UADiB;AAE1BR,gBAAUA,iBAFgB;AAG1BC,eAAS;AAHiB,KAAZ,CAAhB,CAFgD,CAQhD;;AACAkB,YAAQ,oBAAR,EAA8Bf,OAA9B;;AAEA,QAAIO,SAASH,WAAWI,MAAX,CAAkB,IAAlB,CAAb;AACA,4BAAQJ,UAAR,EAAoBY,IAApB,CAAyB,gBAAzB,EAA2CN,IAA3C,CAAgD,UAACC,QAAD,EAAc;AAC5DV,aAAOU,SAASC,UAAhB,EAA4BC,OAA5B,CAAoC,GAApC;AACAN,aAAOO,KAAP;AACAX;AACD,KAJD;AAKD,GAjBD;AAkBD,CAtDD","sourcesContent":["/* eslint-disable global-require */\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nimport request from 'supertest';\nimport { Payload } from '../';\nimport * as utils from './testUtils';\n\nconst app = express();\n\nfunction initBasicPayload() {\n  return new Payload({\n    express: app,\n    mongoose: mongoose,\n    baseURL: 'localhost'\n  });\n}\n\ndescribe('Basic Payload Tests', () => {\n  test('Instantiate Payload', () => {\n    const payload = initBasicPayload();\n    expect(payload).toBeDefined();\n  });\n});\n\ndescribe('API route tests', () => {\n  test('Mount /api route', (done) => {\n    const expressApp = utils.getConfiguredExpress();\n    const payload = new Payload({\n      express: expressApp,\n      mongoose: mongoose,\n      baseURL: 'localhost'\n    });\n\n    let server = expressApp.listen(3000);\n    request(expressApp).get('/api').then((response) => {\n      expect(response.statusCode).toEqual(200);\n      server.close();\n      done();\n    });\n  });\n\n  test('Mount /api/testmodel GET route', (done) => {\n    const expressApp = utils.getConfiguredExpress();\n    const payload = new Payload({\n      express: expressApp,\n      mongoose: mongoose,\n      baseURL: 'localhost'\n    });\n\n    // File contains what a developer would write\n    require('./models/testModel')(payload);\n\n    let server = expressApp.listen(3000);\n    request(expressApp).get('/api/testmodel').then((response) => {\n      expect(response.statusCode).toEqual(200);\n      server.close();\n      done();\n    });\n  });\n\n  test('Mount /api/testmodel POST route', (done) => {\n    const expressApp = utils.getConfiguredExpress();\n    const payload = new Payload({\n      express: expressApp,\n      mongoose: mongoose,\n      baseURL: 'localhost'\n    });\n\n    // File contains what a developer would write\n    require('./models/testModel')(payload);\n\n    let server = expressApp.listen(3000);\n    request(expressApp).post('/api/testmodel').then((response) => {\n      expect(response.statusCode).toEqual(201);\n      server.close();\n      done();\n    });\n  });\n});\n"],"file":"payload.test.js"}