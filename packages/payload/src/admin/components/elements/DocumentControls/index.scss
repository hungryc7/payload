@import '../../../scss/styles.scss';

.doc-controls {
  @include blur-bg;
  position: sticky;
  top: 0;
  width: 100%;
  z-index: 1;
  display: flex;
  align-items: center;
  --controlsHeight: calc(var(--base) * 3);

  &::after {
    content: '';
    display: block;
    position: absolute;
    height: 1px;
    background: var(--theme-elevation-100);
    width: calc(100% + var(--gutter-h));
    left: calc(var(--gutter-h) * -1);
    top: 100%;
  }

  &__wrapper {
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
    gap: var(--base);
    padding-bottom: 1px;
    z-index: 1;
  }

  &__content {
    height: var(--controlsHeight);
    display: flex;
    align-items: center;
    flex-grow: 1;
    overflow: hidden;
  }

  &__meta {
    flex-grow: 1;
    display: flex;
    list-style: none;
    padding: 0;
    gap: var(--base);
    margin: 0;
    width: 100%;
  }

  &__list-item {
    display: flex;
    align-items: center;
    margin: 0;
  }

  &__value-wrap {
    overflow: hidden;
  }

  &__value {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    margin: 0;
    font-weight: 600;
  }

  &__label {
    color: var(--theme-elevation-500);
    white-space: nowrap;
    margin: 0;
  }

  &__controls-wrapper {
    display: flex;
    align-items: center;
    margin: 0;
    // move to the right to account for the padding on the dots
    // this will make sure the alignment is correct
    // while still keeping a large button hitbox
    transform: translate3d(var(--base), 0, 0);
  }

  &__controls {
    display: flex;
    align-items: center;
    margin: 0;
    gap: calc(var(--base) / 2);

    button {
      margin: 0;
      white-space: nowrap;
    }
  }

  &__popup {
    .popup-button {
      padding: var(--base);
      background: transparent;
      border: none;
      cursor: pointer;
      color: var(--theme-elevation-500);

      &:hover {
        color: var(--theme-text);
      }
    }
  }

  &__dots {
    display: flex;
    gap: 2px;
    background-color: transparent;
    padding: 0;

    > div {
      width: 3px;
      height: 3px;
      border-radius: 100%;
      background-color: currentColor;
    }
  }

  &__popup-actions {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: calc(var(--base) / 4);

    a {
      text-decoration: none;
    }

    li {
      position: relative;

      &::before {
        content: '';
        display: block;
        position: absolute;
        height: 100%;
        width: 100%;
        border-radius: 1px;
        background: var(--theme-elevation-100);
        width: calc(100% + (var(--base) / 2));
        left: calc(var(--base) / -4);
        top: 0;
        opacity: 0;
        transition: opacity 50ms linear;
      }

      &:hover::before {
        opacity: 1;
      }

      > * {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: left;
        font-size: inherit;
        line-height: inherit;
        font-family: inherit;
      }
    }
  }

  @include mid-break {
    // On mobile, only stick the controls to the top
    // The timestamps and meta can scroll past
    // The same container needs to the sticky, though
    // So we use a static height with a negative top
    --controlsHeight: calc(var(--base) * 1.5);
    top: calc(var(--controlsHeight) * -1);
    padding-right: 0;
    padding-left: 0;

    &__wrapper {
      flex-direction: column;
      gap: 0;
    }

    &__content {
      width: 100%;
      align-items: flex-start;
      padding-top: calc(var(--base) / 2);
      overflow: auto;

      // this container has a fixed height
      // this means the scrollbar (when present) overlaps the content
      &::-webkit-scrollbar {
        display: none;
      }
    }

    &__meta {
      width: auto;
      gap: calc(var(--base) / 2);
      margin-left: var(--gutter-h);
      margin-right: var(--gutter-h);
    }

    &__controls-wrapper {
      width: 100%;
      transform: translate3d(0, 0, 0);
      padding: calc(var(--base) / 2) 0;
      overflow: auto;
    }

    &__controls {
      margin-left: var(--gutter-h);
      margin-right: var(--gutter-h);
    }

    &__popup {
      // TODO: the container needs to overflow on mobile
      // But the popup interferes with this because it requires overflow in order to be visible
      // So we likely need to outright show the controls nested within the popup on mobile
      display: none;
    }
  }
}
